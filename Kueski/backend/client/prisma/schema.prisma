generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model addresses {
  ADRESSES_KEY Int       @id @default(autoincrement())
  USER_ID      Int?
  COUNTRY      String?   @db.TinyText
  STATE        String?   @db.TinyText
  CITY         String?   @db.TinyText
  NEIGHBORHOOD String?   @db.TinyText
  ZIP_CODE     Int?
  STREET       String?   @db.TinyText
  EXT_NUMBER   Int?
  INT_NUMBER   Int?
  CREATED_AT   DateTime? @db.Timestamp(0)
  UPDATE_AT    DateTime? @db.Timestamp(0)
  DELETED_AT   DateTime? @db.Timestamp(0)
  users        users?    @relation(fields: [USER_ID], references: [USER_ID], onDelete: Restrict, onUpdate: Restrict, map: "addresses_ibfk_1")

  @@index([USER_ID], map: "USER_ID")
}

model arco_request {
  ID_REQUEST   Int       @id @default(autoincrement())
  USER_ID      Int?
  TYPE_REQUEST Int?
  COMMENTARIOS String?   @db.TinyText
  PREV_VALUE   String?   @db.TinyText
  NEW_VALUE    String?   @db.TinyText
  FECHA        DateTime? @db.Timestamp(0)
  users        users?    @relation(fields: [USER_ID], references: [USER_ID], onDelete: Restrict, onUpdate: Restrict, map: "arco_request_ibfk_1")

  @@index([USER_ID], map: "USER_ID")
}

model identifications {
  ID_KEY                Int       @id @default(autoincrement())
  USER_ID               Int?
  IDENTIFICATION_TYPE   String?   @db.TinyText
  IDENTIFICATION_NUMBER String?   @db.TinyText
  CREATED_AT            DateTime? @db.Timestamp(0)
  UPDATE_AT             DateTime? @db.Timestamp(0)
  DELETED_AT            DateTime? @db.Timestamp(0)
  users                 users?    @relation(fields: [USER_ID], references: [USER_ID], onDelete: Restrict, onUpdate: Restrict, map: "identifications_ibfk_1")

  @@index([USER_ID], map: "USER_ID")
}

model oposicion {
  OPPOSITION_KEY  Int       @id @default(autoincrement())
  USER_ID         Int?
  OPPOSITION_TYPE Int?
  CREATED_AT      DateTime? @db.Timestamp(0)
  UPDATE_AT       DateTime? @db.Timestamp(0)
  DELETED_AT      DateTime? @db.Timestamp(0)
  users           users?    @relation(fields: [USER_ID], references: [USER_ID], onDelete: Restrict, onUpdate: Restrict, map: "oposicion_ibfk_1")

  @@index([USER_ID], map: "USER_ID")
}

model users {
  USER_ID           Int               @id @unique(map: "USER_ID")
  IDENTITY_USER_ID  String?           @db.TinyText
  USER_NAME         String?           @db.TinyText
  FIRST_LAST_NAME   String?           @db.TinyText
  SECOND_LAST_NAME  String?           @db.TinyText
  BORN_DATE         DateTime?         @db.Date
  NACIONALITY       String?           @db.TinyText
  STATE_OF_BIRTH    String?           @db.TinyText
  ECONOMIC_ACTIVITY String?           @db.TinyText
  CURP              String?           @db.TinyText
  PHONE_NUMBER      String?           @db.TinyText
  EMAIL             String?           @db.TinyText
  USER_DATA         String?           @db.LongText
  IS_CLIENT         Boolean?
  IS_BLOCKED        Boolean?
  CREATED_AT        DateTime?         @db.Timestamp(0)
  UPDATE_AT         DateTime?         @db.Timestamp(0)
  DELETED_AT        DateTime?         @db.Timestamp(0)
  addresses         addresses[]
  arco_request      arco_request[]
  identifications   identifications[]
  oposicion         oposicion[]
}
